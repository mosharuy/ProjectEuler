/**
 * Project Euler: Problem 2: Even Fibonacci Numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.
 * **/

function fiboEvenSum(n) {
    
    //create fib array with first two elements 1 and 2
    let fib = [1,2];
    
    //generate the fibonacci sequence numbers less than given n
      for (let i=0; i<n;i++){
        let next = fib[i] + fib[i+1];
        if (next <=n){
          fib.push(next);
        }
      }
    // filter the array and keep the even fibonacci numbers
    // reduce the array to the sum of it's elements
    return fib.filter(n => n%2 === 0).reduce((a,b) => a+b,0);
  }

  //tested on https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-2-even-fibonacci-numbers